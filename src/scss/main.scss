@use 'abstracts/colors' as col;
@use 'abstracts/fonts' as fon;
@use 'abstracts/mixins' as mix;
@use 'abstracts/spacing' as sp;
@use 'base/base' as base;
@use 'layout/breakpoints' as br;
@use 'layout/grid' as gr;
@use 'layout/utilities' as ut;


//Items to go within the root element
:root {

    //Create color variables
    @each $color,
    $shades in col.$colors {

        @each $shade,
        $value in $shades {
            --clr-#{$color}-#{$shade}: #{$value};
        }
    }

    //Font Weight Variables
    @each $weight,
    $value in fon.$type-weight {
        --fw-#{$weight}: #{$value};
    }


    //Font Size Variables
    @each $screen,
    $sizes in fon.$type-scale {
        @if $screen ==large {

            @each $size,
            $value in $sizes {
                --fs-#{$size}: #{$value};
            }
        }

        @else {
            @include mix.mq(br.$sm) {

                @each $size,
                $value in $sizes {
                    --fs-#{$size}: #{$value};
                }
            }
        }
    }
}

//Color classes
@each $color,
$shades in col.$colors {

    @each $shade,
    $value in $shades {
        .clr-#{$color}-#{$shade} {
            color: #{$value};
        }

        .bg-clr-#{$color}-#{$shade} {
            background-color: #{$value};
        }
    }
}

//Font Size Classes
@each $screen,
$sizes in fon.$type-scale {
    @if $screen ==large {

        @each $size,
        $value in $sizes {
            .fs-#{$size} {
                font-size: #{$value};
            }
        }
    }

    @else {
        @include mix.mq(br.$sm) {

            @each $size,
            $value in $sizes {
                .fs-#{$size} {
                    font-size: #{$value};
                }
            }
        }
    }
}

//Font Typography Set In Figma

//Header 1
.header-1 {
    font-size: var(--fs-900);
    font-weight: var(--fw-800);
    letter-spacing: -2%;
}

// Header 2
.header-2 {
    font-size: var(--fs-700);
    font-weight: var(--fw-700);
    letter-spacing: -2%;
}

// Header 3
.header-3 {
    font-size: var(--fs-500);
    font-weight: var(--fw-700);
}

// Subtitle and Body Large Text 
.subtitle .body-large {
    font-size: var(--fs-500);
    font-weight: var(--fw-500);
}

// Body Text 
.body-text {
    font-size: var(--fs-300);
    font-weight: var(--fw-500);
    line-height: 140%;
}

// Bold Text 
.bold {
    font-size: var(--fs-300);
    font-weight: var(--fw-700);
}

// Small Text 
.small {
    font-size: var(--fs-200);
    font-weight: var(--fw-500);
}

// Pre Title 
.pre-title {
    font-size: var(--fs-200);
    font-weight: var(--fw-700);
    letter-spacing: 3%;
}

// Button Text 
.btn-text {
    font-size: var(--fs-300);
    font-weight: var(--fw-700);
    letter-spacing: 3%;
}

// Link Text
.link-text {
    font-size: var(--fs-300);
    font-weight: var(--fw-700);
    text-decoration: underline;
}

//Spacing Classes
@each $pos,
$space in sp.$spaces {
    @each $side in sp.$sides {
        @if $side ==all {
            .pa-#{$pos} {
                padding: #{$space} !important;
            }

            .ma-#{$pos} {
                margin: #{$space} !important;
            }
        }

        @if $side ==y {
            .py-#{$pos} {
                padding: #{$space} 0 !important;
            }

            .my-#{$pos} {
                margin: #{$space} 0 !important;
            }
        }

        @if $side ==x {
            .px-#{$pos} {
                padding: 0 #{$space} !important;
            }

            .mx-#{$pos} {
                margin: 0 #{$space} !important;
            }
        }

        @if $side ==t {
            .pt-#{$pos} {
                padding-top: #{$space} !important;
            }

            .mt-#{$pos} {
                margin-top: #{$space} !important;
            }
        }

        @if $side ==b {
            .pb-#{$pos} {
                padding-bottom: #{$space} !important;
            }

            .mb-#{$pos} {
                margin-bottom: #{$space} !important;
            }
        }

        @if $side ==l {
            .pl-#{$pos} {
                padding-left: #{$space} !important;
            }

            .ml-#{$pos} {
                margin-left: #{$space} !important;
            }
        }

        @if side==r {
            .pr-#{$pos} {
                padding-right: #{$space} !important;
            }

            .mr-#{$pos} {
                margin-right: #{$space} !important;
            }
        }

    }
}

//Layout Classes

//Container
.container {

    width: 100%;

    @include mix.mq(br.$xl2) {
        max-width: br.$xl2;
    }

    @include mix.mq(br.$xl) {
        max-width: br.$xl;
    }

    @include mix.mq(br.$lg) {
        max-width: br.$lg;
    }

    @include mix.mq(br.$md) {
        max-width: br.$md;
    }

    @include mix.mq(br.$sm) {
        max-width: br.$sm;
    }
}


//Row System Implementation
.row {
    display: flex;
    flex-wrap: wrap;
}

@for $i from 1 through gr.$columns {
    .col-#{$i} {
        flex: 0 0 calc(100% / (gr.$columns / $i));
    }

    .col-offset-#{$i} {
        margin-left: calc(100% / (gr.$columns / $i));
    }
}

//Aspect Ratio Implementation
@each $view,
$prop in ut.$vid_options {

    .aspect-#{$view} {
        aspect-ratio: #{$prop};
    }
}

// Box Sizing
@each $prop in ut.$bs_options {

    .#{$prop} {
        box-sizing: #{$prop};
    }
}

//Display
@each $prop in ut.$disp_options {
    .#{$prop} {
        display: #{$prop};
    }
}

//Object Fit
@each $prop in ut.$obj_options {
    .object-#{$prop} {
        display: #{$prop}
    }
}

//Overflow
@each $prop in ut.$overflow_options {

    .overflow-#{$prop} {
        overflow: #{$prop};
    }

    @each $dim in ut.$dim {
        .overflow-#{$dim}-#{$prop} {
            overflow-#{$dim}: #{$prop};
        }
    }


}

//Overscroll
@each $prop in ut.$overscroll_options {
    .overscroll-#{$prop} {
        overscroll-behavior: #{$prop};
    }

    @each $dim in ut.$dim {
        .overscroll-#{$dim}-#{$prop} {
            overscroll-behavior-#{$dim}: #{$prop};
        }
    }
}

//Positions
@each $prop in ut.$position_options {
    .#{$prop} {
        position: #{$prop};
    }
}

//Visibilty
@each $class,
$prop in ut.$vis_options {
    .#{$class} {
        visibility: #{$prop};
    }
}